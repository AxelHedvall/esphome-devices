esphome:
  name: weather-station
  friendly_name: "Weather Station"

esp32:
  board: esp32dev

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "xxx"

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Weather Station Fallback Hotspot"
    password: !secret fallback_ap_password

captive_portal:
    
time:
  - platform: homeassistant
    id: homeassistant_time

one_wire:
  - platform: gpio
    pin: 25

globals:
  - id: page
    type: int
    initial_value: "0"

sensor:
  - platform: wifi_signal
    name: "RSSI"
  - platform: uptime
    name: "Uptime"
  - platform: internal_temperature
    name: "Internal Temperature"

  - platform: dallas_temp
    name: "Outside Temperature"
    icon: mdi:home-thermometer
    id: out_temp
    update_interval: 120s

  - platform: dht
    pin: 13
    model: DHT11
    temperature:
      name: "Inside Temperature"
      icon: mdi:home-thermometer-outline
      id: in_temp
    humidity:
      name: "Inside Humidity"
    update_interval: 120s

display:
  platform: tm1637
  clk_pin: 19
  dio_pin: 18
  update_interval: 500ms
  lambda: |-
      switch (id(page)){
        case 0:
        case 2:
          static int i = 0;
          i++;
          if ((i % 2) == 0)
            it.strftime("%H.%M", id(homeassistant_time).now());
          else
            it.strftime("%H%M", id(homeassistant_time).now());
          break;
        case 1:
          it.printf("I %.0f", id(in_temp).state);
          break;
        case 3:
          it.printf("O %.0f", id(out_temp).state);
          break;
      }

interval:    
  - interval: 10s
    then:
      - lambda: |-
          id(page) = (id(page) + 1);
          if (id(page) > 3) {
            id(page) = 0;
          }
